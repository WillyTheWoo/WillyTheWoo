# CPU_track=CPU_track
if(is.na(User_track[row,col])|User_track[row,col]==9){
stop()
}else if(CPU[row,col]>0&&sum(as.numeric(CPU==CPU[row,col]))>1){
User[row,col]<-9
User_track[row,col]<-9
}else if(CPU[row,col]==0) {
User_track[row,col]<-NA
}else{
CPU[row,col]<-9
User_track[row,col]<-9
}
if(sum(as.numeric(CPU!=0),na.rm=T)==0){
stop()
}
return(User_track)
}
?renderTable
??renderTable
Userr<-play(col(),row(),CPU,User_track)
Userr<-play(col,row,CPU,User_track)
Userr<-play(col,row,CPU,User_track)
USerr<-play("k",5,CPU,User_track)
USerr
print(USerr)
Userr<-play("k",5,CPU,User_track)
print(Userr)
Userr<-play("k",2,CPU,User_track)
print(Userr)
Userr<-play("a",2,CPU,User_track)
print(Userr)
User<-setboard()
CPU<- setboard()
User_track<-new_track()
CPU_track<-new_track()
Userr<-play("a",2,CPU,User_track)
print(Userr)
View(CPU_track)
View(User)
View(User_track)
View(User)
View(CPU)
View(CPU)
Userr<-play("a",2,CPU,User_track)
Userr
play<-function(row,col,CPU,User_track){
# CPU=CPU
# User=User
# User_track=User_track
# CPU_track=CPU_track
if((!is.na(User_track[row,col]))&User_track[row,col]!=9){
return("You've tried this spot before, pick something else")
stop()
}else if(CPU[row,col]>0&&sum(as.numeric(CPU==CPU[row,col]))>1){
return(paste("You have successfully hit ship No.",as.character(CPU[row,col])))
User[row,col]<-9
User_track[row,col]<-9
}else if(CPU[row,col]==0) {
return("You missed")
User_track[row,col]<-NA
}else{
return(paste("You have sunk ship No.",as.character(User[row,col])))
CPU[row,col]<-9
User_track[row,col]<-9
}
assign("CPU",CPU,envir=.GlobalEnv)
assign('User_track',User_track,envir=.GlobalEnv)
if(sum(as.numeric(CPU!=0),na.rm=T)==0){
return("Congrats! You've won battleship")
stop()
}
}
play(2,"k")
play(2,"k",CPU,User_track)
User<-setboard()
CPU<- setboard()
User_track<-new_track()
CPU_track<-new_track()
play(2,"k",CPU,User_track)
play(2,"k",CPU,User_track)
play(2,"a",CPU,User_track)
play(2,"e",CPU,User_track)
play(5,"e",CPU,User_track)
View(CPU)
View(User_track)
User_track[2,'a']
is.na(User_track[2,'a'])
!is.na(User_track[2,'a'])
!is.na(User_track[2,'a'])&User_track[2,'a']!=9
play<-function(row,col,CPU,User_track){
# CPU=CPU
# User=User
# User_track=User_track
# CPU_track=CPU_track
if(!(!is.na(User_track[row,col]))&User_track[row,col]!=9)){
return("You've tried this spot before, pick something else")
stop()
}else if(CPU[row,col]>0&&sum(as.numeric(CPU==CPU[row,col]))>1){
return(paste("You have successfully hit ship No.",as.character(CPU[row,col])))
User[row,col]<-9
User_track[row,col]<-9
}else if(CPU[row,col]==0) {
return("You missed")
User_track[row,col]<-NA
}else{
return(paste("You have sunk ship No.",as.character(User[row,col])))
CPU[row,col]<-9
User_track[row,col]<-9
}
assign("CPU",CPU,envir=.GlobalEnv)
assign('User_track',User_track,envir=.GlobalEnv)
if(sum(as.numeric(CPU!=0),na.rm=T)==0){
return("Congrats! You've won battleship")
stop()
}
}
# CPU=CPU
# User=User
# User_track=User_track
# CPU_track=CPU_track
if(!((!is.na(User_track[row,col]))&User_track[row,col]!=9)){
return("You've tried this spot before, pick something else")
stop()
}else if(CPU[row,col]>0&&sum(as.numeric(CPU==CPU[row,col]))>1){
return(paste("You have successfully hit ship No.",as.character(CPU[row,col])))
User[row,col]<-9
User_track[row,col]<-9
}else if(CPU[row,col]==0) {
return("You missed")
User_track[row,col]<-NA
}else{
return(paste("You have sunk ship No.",as.character(User[row,col])))
CPU[row,col]<-9
User_track[row,col]<-9
}
play<-function(row,col,CPU,User_track){
# CPU=CPU
# User=User
# User_track=User_track
# CPU_track=CPU_track
if(!((!is.na(User_track[row,col]))&User_track[row,col]!=9)){
return("You've tried this spot before, pick something else")
stop()
}else if(CPU[row,col]>0&&sum(as.numeric(CPU==CPU[row,col]))>1){
return(paste("You have successfully hit ship No.",as.character(CPU[row,col])))
User[row,col]<-9
User_track[row,col]<-9
}else if(CPU[row,col]==0) {
return("You missed")
User_track[row,col]<-NA
}else{
return(paste("You have sunk ship No.",as.character(User[row,col])))
CPU[row,col]<-9
User_track[row,col]<-9
}
assign("CPU",CPU,envir=.GlobalEnv)
assign('User_track',User_track,envir=.GlobalEnv)
if(sum(as.numeric(CPU!=0),na.rm=T)==0){
return("Congrats! You've won battleship")
stop()
}
}
play(2,'k',CPU,User_track)
play(2,'k',CPU,User_track)
play(2,'k',CPU,User_track)
play(2,'k',CPU,User_track)
play(2,'k',CPU,User_track)
View(User_track)
View(CPU)
View(User_track)
play<-function(row,col,CPU,User_track){
# CPU=CPU
# User=User
# User_track=User_track
# CPU_track=CPU_track
if(!((!is.na(User_track[row,col]))&User_track[row,col]!=9)){
return("You've tried this spot before, pick something else")
stop()
}else if(CPU[row,col]>0&&sum(as.numeric(CPU==CPU[row,col]))>1){
return(paste("You have successfully hit ship No.",as.character(CPU[row,col])))
CPU[row,col]<-9
User_track[row,col]<-9
}else if(CPU[row,col]==0) {
return("You missed")
User_track[row,col]<-NA
}else{
return(paste("You have sunk ship No.",as.character(User[row,col])))
CPU[row,col]<-9
User_track[row,col]<-9
}
assign("CPU",CPU,envir=.GlobalEnv)
assign('User_track',User_track,envir=.GlobalEnv)
if(sum(as.numeric(CPU!=0),na.rm=T)==0){
return("Congrats! You've won battleship")
stop()
}
}
play(2,'k',CPU,User_track)
View(User_track)
play<-function(row,col,CPU,User_track){
# CPU=CPU
# User=User
# User_track=User_track
# CPU_track=CPU_track
if(!((!is.na(User_track[row,col]))&User_track[row,col]!=9)){
return("You've tried this spot before, pick something else")
stop()
}else if(CPU[row,col]>0&&sum(as.numeric(CPU==CPU[row,col]))>1){
return(paste("You have successfully hit ship No.",as.character(CPU[row,col])))
CPU[row,col]<-9
User_track[row,col]<-9
}else if(CPU[row,col]==0) {
return("You missed")
User_track[row,col]<-NA
}else{
return(paste("You have sunk ship No.",as.character(User[row,col])))
CPU[row,col]<-9
User_track[row,col]<-9
}
assign("CPU",CPU,envir=.GlobalEnv)
assign('User_track',User_track,envir=.GlobalEnv)
if(sum(as.numeric(CPU!=0),na.rm=T)==0){
return("Congrats! You've won battleship")
}
}
play(2,'k',CPU,User_track)
View(User_track)
library(shiny)
library(tidyverse)
COVID_19_Resource<- read_csv("Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")
library(tidyverse)
library(shiny)
COVID_19_Resource<- read_csv("Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")
COVID_19_Resource<- read_csv("~/Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")
View(COVID_19_Resource)
variable.names(COVID_19_Resource)
COVID_19_Resource<- read.csv("~/Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")%>%
separate()
COVID_19_Resource<- read.csv("~/Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"statewide",City))
View(COVID_19_Resource)
str_detect(variable.names(COVID_19_Resource),regex("X\\d+"))
str_detect(variable.names(COVID_19_Resource),regex("X"))
str_detect(variable.names(COVID_19_Resource),regex("X//d+"))
str_detect(variable.names(COVID_19_Resource),regex("X\\d+"))
str_detect(variable.names(COVID_19_Resource),regex("X\d+"))
str_detect(variable.names(COVID_19_Resource),regex("X/d+"))
str_detect(variable.names(COVID_19_Resource),regex("X\\d+"))
str_detect(variable.names(COVID_19_Resource),regex("X"))
COVID_19_Resource<- read.csv("~/Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"statewide",City))%>%
select(!str_detect(variable.names(COVID_19_Resource),regex("X")))
COVID_19_Resource<- read.csv("~/Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"statewide",City))%>%
select(variable.names(COVID_19_Resource)[,!str_detect(variable.names(COVID_19_Resource),regex("X"))])
COVID_19_Resource<- read.csv("~/Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"statewide",City))%>%
select(variable.names(COVID_19_Resource)[!str_detect(variable.names(COVID_19_Resource),regex("X")),])
variable.names(COVID_19_Resource)[!str_detect(variable.names(COVID_19_Resource),regex("X")),]
variable.names(COVID_19_Resource)[!str_detect(variable.names(COVID_19_Resource),regex("X"))]
COVID_19_Resource<- read.csv("~/Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"statewide",City))%>%
select(variable.names(COVID_19_Resource)[!str_detect(variable.names(COVID_19_Resource),regex("X"))])
View(COVID_19_Resource)
COVID_19_Resource<- read.csv("~/Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"Statewide",City))%>%
select(variable.names(COVID_19_Resource)[!str_detect(variable.names(COVID_19_Resource),regex("X"))])
distinct(COVID_19_Resource$State)
unique(COVID_19_Resource$State)
COVID_19_Resource<- read.csv("~/Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"Statewide",City))%>%
select(variable.names(COVID_19_Resource)[!str_detect(variable.names(COVID_19_Resource),regex("X"))])
variable.names(COVID_19_Resource)[!str_detect(variable.names(COVID_19_Resource),regex("X"))]
COVID_19_Resource<-select(as.vector(variable.names(COVID_19_Resource)[!str_detect(variable.names(COVID_19_Resource),regex("X"))]))
COVID_19_Resource<-COVID_19_Resource[,!str_detect(variable.names(COVID_19_Resource),regex("X"))]
knitr::opts_chunk$set(echo=FALSE,message=FALSE,warning=FALSE)
library(tidyverse)
library(shiny)
COVID_19_Resource<- read.csv("~/Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"Statewide",City))
COVID_19_Resource<-COVID_19_Resource[,!str_detect(variable.names(COVID_19_Resource),regex("X"))]
COVID_19_Resource[,!str_detect(variable.names(COVID_19_Resource),regex("X"))]
COVID_19_Resource<- read.csv("~/Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"Statewide",City))
COVID_19_Resource<-COVID_19_Resource[,!str_detect(variable.names(COVID_19_Resource),regex("X"))]
View(COVID_19_Resource)
names(COVID_19_Resource)<-str_replace(variable.names(COVID_19_Resource),"."," ")
View(COVID_19_Resource)
str_replace(variable.names(COVID_19_Resource),"."," ")
names(COVID_19_Resource)<-str_replace(variable.names(COVID_19_Resource),pattern=".",rep=" ")
COVID_19_Resource<- read.csv("~/Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"Statewide",City))
COVID_19_Resource<-COVID_19_Resource[,!str_detect(variable.names(COVID_19_Resource),regex("X"))]
str_replace(variable.names(COVID_19_Resource),pattern=".",rep=" ")
str_replace(variable.names(COVID_19_Resource),pattern="\.",rep=" ")
str_replace(variable.names(COVID_19_Resource),pattern="\\.",rep=" ")
names(COVID_19_Resource)<-str_replace_all(variable.names(COVID_19_Resource),pattern="\\.",rep=" ")
View(COVID_19_Resource)
knitr::opts_chunk$set(echo=FALSE,message=FALSE,warning=FALSE)
library(tidyverse)
library(shiny)
COVID_19_Resource<- read.csv("~/Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"Statewide",City))
COVID_19_Resource<-COVID_19_Resource[,!str_detect(variable.names(COVID_19_Resource),regex("X"))]
names(COVID_19_Resource)<-str_replace_all(variable.names(COVID_19_Resource),pattern="\\.",rep=" ")
View(COVID_19_Resource)
table<-COVID_19_Resource%>%
filter(State==input$state,city=ifelse(input$City=="Statewide",NULL,input$City))
knitr::opts_chunk$set(echo=FALSE,message=FALSE,warning=FALSE)
library(tidyverse)
library(shiny)
COVID_19_Resource<- read.csv("~/Documents/OneDrive - The Ohio State University/R/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"Statewide",City))
COVID_19_Resource<-COVID_19_Resource[,!str_detect(variable.names(COVID_19_Resource),regex("X"))]%>%
arrange(State,City)
names(COVID_19_Resource)<-str_replace_all(variable.names(COVID_19_Resource),pattern="\\.",rep=" ")
unique(COVID_19_Resource$State)[-'ALL']
unique(COVID_19_Resource$State)[-ALL]
unique(COVID_19_Resource$State)[-'ALL']
unique(COVID_19_Resource$State)
unique(COVID_19_Resource$State)[-'FEDERAL']
unique(COVID_19_Resource$State)['FEDERAL']
unique(COVID_19_Resource$State)[FEDERAL]
unique(COVID_19_Resource$State)
unique(COVID_19_Resource$State)["FEDERAL"]
unique(COVID_19_Resource$State)
COVID_19_Resource<-COVID_19_Resource[,!str_detect(variable.names(COVID_19_Resource),regex("X"))]%>%
arrange(State,City)%>%
mutate(State=ifelse(State=="FEDERAL","ALL",State))
unique(COVID_19_Resource$State)
unique(COVID_19_Resource$State)["AL"]
unique(COVID_19_Resource$State)[!str_detect(unique(COVID_19_Resource$State),"ALL")]
u<-fluidPage(
titlePanel("COVID-19 Resource List"),
sidebarLayout(
sidebarPanel(selectInput("state","State",c("All",unique(COVID_19_Resource$State)[!str_detect(unique(COVID_19_Resource$State),"ALL")])),
br(),
(selectInput("city","City",unique(COVID_19_Resource$City))
)),
mainPanel("Resources in your select area",
br(),
tableOutput("resource")
)
)
)
sys.dae
Sys.Date()
?renderTable
install.packages("shinythemes")
install.packages('rsconnect')
rsconnect::setAccountInfo(name='willychen',
token='5B5DCAFF63B32C4F04F0320A52198C34',
secret='<SECRET>')
rsconnect::setAccountInfo(name='willychen',
token='5B5DCAFF63B32C4F04F0320A52198C34',
secret='<SECRET>')
rsconnect::setAccountInfo(name='willychen',
token='5B5DCAFF63B32C4F04F0320A52198C34',
secret='<SECRET>')
rsconnect::setAccountInfo(name='willychen',
token='5B5DCAFF63B32C4F04F0320A52198C34',
secret='<SECRET>')
rsconnect::setAccountInfo(name='willychen',
token='5B5DCAFF63B32C4F04F0320A52198C34',
secret='<SECRET>')
rsconnect::setAccountInfo(name='willychen',
token='5B5DCAFF63B32C4F04F0320A52198C34',
secret='<SECRET>')
rsconnect::setAccountInfo(name='willychen',
token='5B5DCAFF63B32C4F04F0320A52198C34',
secret='4lfxUC1RDYnrXfydtnQjLfP4AxKGe5EJMW40EIIP')
deployApp()
library(rsconnect)
deployApp()
deployApp(app.R)
deployApp('app.R')
deployApp('~/Documents/GitHub/WillyTheWoo/COVID/app.R')
deployApp('~/Documents/GitHub/WillyTheWoo/COVID/covid/app.R')
deployApp('~/Documents/GitHub/WillyTheWoo/COVID/COVID.Rmd')
deployApp('~/Documents/GitHub/WillyTheWoo/COVID/COVID.Rmd')
?renderTable
COVID_19_Resource<-read.csv("https://willythewoo.github.io/WillyTheWoo/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"Statewide",City))
library(tidyverse)
library(shiny)
library(shinythemes)
COVID_19_Resource<-read.csv("https://willythewoo.github.io/WillyTheWoo/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"Statewide",City))
COVID_19_Resource<-COVID_19_Resource[,!str_detect(variable.names(COVID_19_Resource),regex("X"))]%>%
arrange(State,City)
View(COVID_19_Resource)
View(COVID_19_Resource)
COVID_19_Resource<-COVID_19_Resource[,!str_detect(variable.names(COVID_19_Resource),regex("X"))]%>%
arrange(State,City)
COVID_19_Resource<-read.csv("https://willythewoo.github.io/WillyTheWoo/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"Statewide",City))
COVID_19_Resource<-COVID_19_Resource[,!str_detect(variable.names(COVID_19_Resource),regex("X"))]%>%
arrange(State,City)
variable.names(COVID_19_Resource)
COVID_19_Resource%>%filter(is.na(Date.of.update))
COVID_19_Resource%>%filter(Date.of.update=="")
COVID_19_Resource<-COVID_19_Resource[,!str_detect(variable.names(COVID_19_Resource),regex("X"))]%>%
arrange(State,City)%>%
filter(!Date.of.update=="")
names(COVID_19_Resource)<-str_replace_all(variable.names(COVID_19_Resource),pattern="\\.",rep=" ")
View(COVID_19_Resource)
unique(COVID_19_Resource$State)[!str_detect(unique(COVID_19_Resource$State)
unique(COVID_19_Resource$State)[!str_detect(unique(COVID_19_Resource$State),"FEDERAL")])
unique(COVID_19_Resource$State)[!str_detect(unique(COVID_19_Resource$State),"FEDERAL")]
library(rsconnect)
deplotApp()
deployApp()
rsconnect::setAccountInfo(name='willychen',
token='5B5DCAFF63B32C4F04F0320A52198C34',
secret='4lfxUC1RDYnrXfydtnQjLfP4AxKGe5EJMW40EIIP')
deployApp()
setwd("~/Documents/GitHub/WillyTheWoo/COVID")
deployApp()
variable.names(COVID_19_Resource)
filter(COVID_19_Resource,
State==input$State)$City
filter(COVID_19_Resource,State=="OH")$City
filter(COVID_19_Resource,State=="CA")$City
filter(COVID_19_Resource,State=="MN")$City
filter(COVID_19_Resource,State=="MN ")$City
knitr::opts_chunk$set(echo=FALSE,message=FALSE,warning=FALSE)
library(tidyverse)
library(shiny)
library(shinythemes)
setwd("~/Documents/GitHub/WillyTheWoo/COVID")
COVID_19_Resource<-read.csv("https://willythewoo.github.io/WillyTheWoo/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"Statewide",City),
State=str_remove(State," "),
City=str_remove(City," "))
COVID_19_Resource<-COVID_19_Resource[,!str_detect(variable.names(COVID_19_Resource),regex("X"))]%>%
arrange(State,City)%>%
filter(!Date.of.update=="")
names(COVID_19_Resource)<-str_replace_all(variable.names(COVID_19_Resource),pattern="\\.",rep=" ")
filter(COVID_19_Resource,State=="MN ")$City
filter(COVID_19_Resource,State=="MN")$City
filter(COVID_19_Resource,State=="MN")$City[1]
?shintApp()
?shinyApp()
View(COVID_19_Resource)
COVID_19_Resource<-read.csv("https://willythewoo.github.io/WillyTheWoo/COVID/COVID-19-Resource.csv")%>%
separate(State,sep="-",c("State","City"))%>%
mutate(City=ifelse(is.na(City),"Statewide",City),
State=str_remove(State," "),
City=str_remove(City," "))
View(COVID_19_Resource)
unique(variable.names(COVID_19_Resource)[3:]
unique(variable.names(COVID_19_Resource)[-2]
unique(variable.names(COVID_19_Resource))[-2]
unique(variable.names(COVID_19_Resource))[-c(1,2)]
COVID_19_Resource<-COVID_19_Resource[,!str_detect(variable.names(COVID_19_Resource),regex("X"))]%>%
arrange(State,City)%>%
filter(!Date.of.update=="")
names(COVID_19_Resource)<-str_replace_all(variable.names(COVID_19_Resource),pattern="\\.",rep=" ")
variable.names(COVID_19_Resource)
variable.names(COVID_19_Resource)[!str_detect(variable.names(COVID_19_Resource),regex("[Date]|[Link]"))]
variable.names(COVID_19_Resource)[str_detect(variable.names(COVID_19_Resource),regex("[Date]|[Link]"))]
variable.names(COVID_19_Resource)[str_detect(variable.names(COVID_19_Resource),regex("Date|Link"))]
variable.names(COVID_19_Resource)[!str_detect(variable.names(COVID_19_Resource),regex("Date|Link"))]
variable.names(COVID_19_Resource)[!str_detect(variable.names(COVID_19_Resource),regex("Date|Link"))][-c(1,2)]
variable.names(COVID_19_Resource)[!str_detect(variable.names(COVID_19_Resource),regex("Date|Link|notes"))][-c(1,2)]
COVID_19_Resource<-COVID_19_Resource%>%
filter(!is.na("UI DI for illness"))
COVID_19_Resource%>%
filter(!is.na("UI DI for illness"))
COVID_19_Resource%>%
filter(!is.na("UI DI for illness"),"UI DI for illness"!="")
COVID_19_Resource%>%
filter(!is.na("UI DI for illness"),"UI DI for illness"!="")%>%select("UI DI for illness")
COVID_19_Resource%>%
filter(!is.na("UI DI for illness"),"UI DI for illness"!=" ")%>%select("UI DI for illness")
COVID_19_Resource%>%
filter(!is.na("UI DI for illness")&"UI DI for illness"!=" ")%>%select("UI DI for illness")
COVID_19_Resource%>%
filter(!is.na("UI DI for illness")|"UI DI for illness"!=" ")%>%select("UI DI for illness")
View(COVID_19_Resource)
deployApp()
rsconnect::setAccountInfo(name='willychen',
token='5B5DCAFF63B32C4F04F0320A52198C34',
secret='4lfxUC1RDYnrXfydtnQjLfP4AxKGe5EJMW40EIIP')
deployApp()
rsconnect::setAccountInfo(name='willychen',
token='5B5DCAFF63B32C4F04F0320A52198C34',
secret='4lfxUC1RDYnrXfydtnQjLfP4AxKGe5EJMW40EIIP')
deployApp()
deployApp(appName="~/Documents/GitHub/WillyTheWoo/COVID/COVID.RMD", account="willychen")
deployApp(appName="~/Documents/GitHub/WillyTheWoo/COVID/COVID.RMD", account="covid-19 resource")
rsconnect::setAccountInfo(name='willychen',
token='5B5DCAFF63B32C4F04F0320A52198C34',
secret='4lfxUC1RDYnrXfydtnQjLfP4AxKGe5EJMW40EIIP')
deployApp(appName="~/Documents/GitHub/WillyTheWoo/COVID/COVID.Rmd", account="willychen")
deployApp(appName="COVID.Rmd", account="willychen")
